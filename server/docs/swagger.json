{
  "openapi": "3.0.1",
  "info": {
    "title": "Api Article Free",
    "description": "Api for article",
    "termsOfService": "terms",
    "contact": {
      "name": "farhan",
      "url": "http://opensource.org/licenses/MIT",
      "email": "farhanrafid97@gmail.com"
    },
    "license": {
      "name": "farhan",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.1 Beta"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "tags": [
    {
      "name": "players",
      "description": "end point for players"
    }
  ],
  "paths": {
    "/players": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "list players",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Player"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "players"
        ],
        "summary": "create player",
        "description": "create new player",
        "requestBody": {
          "$ref": "#/components/requestBodies/Player"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Player"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "got 2 expect error response",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "username or email cannot empty || password cannot be empty"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/players/{idPlayer}": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "Find Player by ID",
        "description": "Returns a single player data",
        "parameters": [
          {
            "name": "idPlayer",
            "in": "path",
            "description": "ID of Player",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Player"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id 1 not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "players"
        ],
        "summary": "Updated Player by id",
        "description": "This can only be done by the logged in user.",
        "parameters": [
          {
            "name": "idPlayer",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Player"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id: 1 successfully updated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id: 1 not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "players"
        ],
        "summary": "Delete player by ID",
        "description": "Delete Player by Id",
        "parameters": [
          {
            "name": "idPlayer",
            "in": "path",
            "description": "ID of Player to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success  delete player by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id: 1, was deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "failed delete player by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "FAILED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot delete Player with id=1. Maybe Player was not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/players/exp/{idPlayer}": {
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Updated experience by id",
        "description": "This can only be done by the logged in user.",
        "parameters": [
          {
            "name": "idPlayer",
            "in": "path",
            "description": "id that need to be updated",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Player Object",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exp": {
                    "type": "integer",
                    "example": 100
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "SUCCESS"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id = 1 gain 100 experience. Total experience = 100"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Exp field cannot be empty"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id: 1,not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "Player": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "farhan"
          },
          "email": {
            "type": "string",
            "example": "farhan@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$8xymg.GWWlEd7C/vchWJMu16vMfRLcVIiNd.IlQ8SQFnUpkE.FR3i"
          },
          "experience": {
            "type": "integer",
            "example": 0
          },
          "lvl": {
            "type": "integer",
            "example": 0
          }
        }
      }
    },
    "requestBodies": {
      "Player": {
        "description": "password min 6 character",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "farhan"
                },
                "email": {
                  "type": "string",
                  "example": "farhan@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": 123456
                },
                "experience": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          }
        }
      }
    }
  }
}